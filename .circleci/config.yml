# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0


jobs:
  install:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            cd app
            make install
      - save_cache:
          key: cache
          paths:
            - ~/venv
  lint:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys: cache
      - run:
          name: run lint
          command: |
            python3 -m venv ~/.venv
            source ~/.venv/bin/activate
            cd app
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            make lint

  build-image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            cd app \
            && docker build -t chawlashikha91/mlpred .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push chawlashikha91/mlpred

  deploy:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Deploying application to EKS
          command: |
             aws eks --region us-east-2 update-kubeconfig --name capstone
             kubectl config use-context arn:aws:eks:us-east-2:572199075108:cluster/capstone
             kubectl apply -f deployment.yml
             kubectl get pods
             kubectl get services
workflows:
  default:
    jobs:
      - install
      - lint:
          requires: [install]
      - build-image:
          requires: [lint]
      - deploy:
          requires: [build-image]
          cluster-name: capstone